---
apiVersion: v1
kind: Namespace
metadata:
  name: emqx
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: mqtt-tls
  namespace: emqx
spec:
  dnsNames:
  - mqtt.vfd.ovh
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: letsencrypt-prd
  secretName: mqtt-tls
  usages:
  - digital signature
  - key encipherment
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: emqx-acls
  namespace: emqx
data:
  acl.conf: |
    {allow, {username, {re, "^dashboard$"}}, subscribe, ["$SYS/#"]}.
    {allow, {ipaddr, "127.0.0.1"}, all, ["$SYS/#", "#"]}.
    {allow, {username, "zigbee2mqtt"}, all, ["zigbee2mqtt/#", "homeassistant/#", "hass/status"]}.
    {allow, {username, "home-assistant"}, all, ["zigbee2mqtt/#", "homeassistant/#", "hass/status"]}.
    {deny, all, subscribe, ["$SYS/#", {eq, "#"}, {eq, "+/#"}]}.
    {deny, all}.
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: emqx-users
  namespace: emqx
spec:
  encryptedData:
    users.csv: AgATNmK373xkFrS9h/aI8zDMaGStubXCFudj0pzRqhtGgRZoNEGuhYh32kTnySqW1s+il4P0AKoVSQVgcp63go5OYNJUji87jc4Cuj1KjY2XJ5UZ3m+YqyVL4snxeP/LJpGPHgUn5SBgnpuuukXYvQQyW7COkG/qw0BOcctc/BTA55m5DNhDfk80D/fMar3U+rRlKWtt9TI2WTF9OL8FF/tQ/cwjDu0Z7e8ckhvh1mVmfUzZ/Dow4kkB2rfqizRI5ANBCNNnQf7GDK3F2rQNwfxfeFiHmwMlJiRNMsMNOK9M/+uHUyIY6iBpAjcJ7gQbQ9nHwHQS4vcFlp06hjH8zABDFZk7MWt8JwkQtSn1jfH1hEPmbko8i4MY40r0Zhva74nVcrqBl/qKTNfbpCj5nawm6waQLcaW6xbv3H9bCND1ooGDBkDtcwNoAJvbrpu3y4c/raJQ4C/2NMywgnlwEnhEaK4hrswO4rAjCtvDvSHfuP4BgOeBabHdzyZNZ1cag7CH52eCKnQEqwsYBOlKkwrtrTrKgjrtpuFENyyuj6WW895XqLvoxYL/xbroq36M5PRzgGJYRifPbt6MEqi2jZmnOx6AY8TOI6CEdj45J5Cw9TYRp4/t2mM+MJOYcVCcdIOS/3DzJWWyUiionegATyo1wEftm+tzzw+nlF8OykzJxbTpD/5pDJN2StbWCXvsYDtdiUETM6De+hzpLSisKo8W/OjINYwQP8MCqSfUEJwTHPIBxtV0qBY3j0N5NYmst1ArxCbQ8gj2ye7KQq3c3TdGLi7mZ2cy4FwPzyRaBOAWmBrP2CehPLDv9z+KPEdqjLxTnXRNzh84ORD37Z45y34j
  template:
    metadata:
      name: emqx-users
      namespace: emqx
    type: Opaque
---
apiVersion: apps.emqx.io/v2beta1
kind: EMQX
metadata:
  name: emqx
  namespace: emqx
spec:
  image: emqx:5.8.2
  config:
    data: |
      authentication = [
        {
          backend = built_in_database
          mechanism = password_based
          password_hash_algorithm {name = sha256, salt_position = suffix}
          user_id_type = username
          
          bootstrap_file = "/mounted/users/users.csv"
          bootstrap_type = plain
        }
      ]

      authorization {
        deny_action = ignore
        no_match = deny
        sources = [
          {
            type = file
            enable = true
            path = "/mounted/acls/acl.conf"
          }
        ]
      }

      listeners.tcp.default.enable = false
      listeners.ws.default.enable = false

      listeners.wss.default {
        bind = "0.0.0.0:8084"
        websocket.mqtt_path = "/mqtt"
        ssl_options {
          certfile = "/mounted/cert/tls.crt"
          keyfile = "/mounted/cert/tls.key"
        }      
      }

      listeners.ssl.default {
        bind = "0.0.0.0:8883"
        ssl_options {
          certfile = "/mounted/cert/tls.crt"
          keyfile = "/mounted/cert/tls.key"
          gc_after_handshake = true
          handshake_timeout = 5s
        }
      }
  coreTemplate:
    spec:
      replicas: 3
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: apps.emqx.io/instance
                operator: In
                values:
                - emqx
            topologyKey: kubernetes.io/hostname
      volumeClaimTemplates:
        storageClassName: longhorn-local
        resources:
          requests:
            storage: 5Gi
        accessModes:
        - ReadWriteOnce
        persistentVolumeReclaimPolicy: Delete
      extraVolumes:
      - name: mqtt-tls
        secret:
          secretName: mqtt-tls
      - name: accounts
        secret:
          secretName: emqx-users
      - name: acls
        configMap:
          name: emqx-acls
      extraVolumeMounts:
      - name: mqtt-tls
        mountPath: /mounted/cert
      - name: accounts
        mountPath: /mounted/users
      - name: acls
        mountPath: /mounted/acls
  dashboardServiceTemplate:
    spec:
      type: ClusterIP
  listenersServiceTemplate:
    metadata:
      annotations:
        external-dns.alpha.kubernetes.io/hostname: mqtt.vfd.ovh
    spec:
      type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: emqx-dashboard
  namespace: emqx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prd
spec:
  ingressClassName: nginx
  rules:
  - host: emqx.vfd.ovh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: emqx-dashboard
            port:
              number: 18083
  tls:
  - hosts:
    - emqx.vfd.ovh
    secretName: emqx-vfd-tls
